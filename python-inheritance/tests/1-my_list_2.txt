The ``1-my_list`` module
============================

Using ``MyList``
---------------------

Importing function from the module:
    >>> MyList = __import__('1-my_list').MyList


Creating an instance of MyList
    >>> my_list = MyList()


MyList is a subclass of list
    >>> issubclass(MyList, list)
    True


Printing a sorted list (unsorted numbers)
    >>> my_list = MyList([3, 1, 4, 2])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Printing a sorted list (already sorted numbers)
    >>> my_list = MyList([1, 2, 3, 4])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Printing a sorted list (reverse sorted numbers)
    >>> my_list = MyList([4, 3, 2, 1])
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Printing an empty list
    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []


Printing a sorted list (one element)
    >>> my_list = MyList([42])
    >>> my_list.print_sorted()
    [42]


Printing a sorted list (duplicate numbers)
    >>> my_list = MyList([3, 1, 3, 2, 2])
    >>> my_list.print_sorted()
    [1, 2, 2, 3, 3]


Appending elements and sorting
    >>> my_list = MyList([4, 1, 3])
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Checking list remains unmodified after print_sorted()
    >>> my_list = MyList([3, 1, 2])
    >>> my_list.print_sorted()
    [1, 2, 3]
    >>> print(my_list)
    [3, 1, 2]


Removing elements and sorting
    >>> my_list = MyList([4, 2, 3, 1])
    >>> my_list.remove(3)
    >>> my_list.print_sorted()
    [1, 2, 4]


MyList is an instance of the class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True


Instance has the correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True


Print_sorted method with 1 passed argument
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2, 3])
    Traceback (most recent call last):
              ...
    TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given


Print_sorted method with 2 passed arguments
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2], [5, 4])
    Traceback (most recent call last):
              ...
    TypeError: MyList.print_sorted() takes 1 positional argument but 3 were given


Type of the print_sorted method
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>


Check printable string
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> print(my_list)
    [5]


Check if print_sorted() returns a new list
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 7]
    >>> my_list
    [7, 1, 2]
